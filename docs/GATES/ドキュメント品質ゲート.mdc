---
title: "Nexus Quality Gates（ドキュメント記法）"
layer: "QA"
template: "legacy-import"
upstream:
  - "docs/PRD/ドキュメントテンプレート仕様.mdc"
downstream: []
tags: []
---

# Nexus Quality Gates（ドキュメント記法）

> Breadcrumbs
> Layer: QA
> Upstream: docs/PRD/ドキュメントテンプレート仕様.mdc
> Downstream: N/A

## Purpose
Nexusドキュメントテンプレート準拠の検証ルールを定義（機械可読形式）。

各Quality GateにはScript（確定的な自動検証）とPrompt（柔軟なAI支援修正）が対応します。

## Gates

```yaml
gates:
  - id: DOC-01
    name: "Breadcrumbsブロック必須"
    target: "*.mdc"
    metric: "Breadcrumbs block exists"
    threshold: 100%
    severity: error
    description: "全ドキュメントに > Breadcrumbs ブロックが存在する"
    
  - id: DOC-02
    name: "Layer定義準拠"
    target: "Breadcrumbs.Layer"
    metric: "Layer in [STRATEGY,PRD,UX,API,DATA,ARCH,DEVELOPMENT,QA]"
    threshold: 100%
    severity: error
    description: "Layer値が定義済み8種のいずれかである"
    
  - id: DOC-03
    name: "リンクパス存在確認"
    target: "Breadcrumbs.Upstream/Downstream"
    metric: "Path exists or equals N/A"
    threshold: 100%
    severity: error
    description: "Upstream/Downstreamパスが実在ファイルまたはN/Aである"
    
  - id: DOC-04
    name: "循環参照検出"
    target: "DAG structure"
    metric: "No circular reference"
    threshold: 0
    severity: warn
    description: "Upstream/Downstreamで循環参照がない"
    
  - id: DOC-05
    name: "章番号必須"
    target: "*.mdc"
    metric: "All headings have chapter numbers"
    threshold: 100%
    severity: error
    description: "全ての見出しに章番号が付与されている（例: ## 1. タイトル）"
    
  - id: DOC-06
    name: "目次必須"
    target: "*.mdc"
    metric: "Table of contents exists"
    threshold: 100%
    severity: error
    description: "ドキュメントに目次ブロック（## 目次）が存在し、リンクが有効である"
    
  - id: DOC-07
    name: "命名規則必須"
    target: "*.mdc"
    metric: "Filename follows naming rules"
    threshold: 100%
    severity: error
    description: "ファイル名が命名規則に準拠している（例: PRD_\w+\.mdc, \w+\.mdc等）"
    
  - id: DOC-08
    name: "内容範囲の明示必須"
    target: "*.mdc"
    metric: "Content scope explicitly stated"
    threshold: 100%
    severity: warn
    description: "ドキュメントに「扱う内容」と「扱わない内容」が明示されている"
    
  - id: DOC-09
    name: "はじめに必須"
    target: "*.mdc"
    metric: "Introduction section exists"
    threshold: 100%
    severity: warn
    description: "ドキュメントに「はじめに」または「0. はじめに」セクションが存在し、位置づけ・想定読者・参照ドキュメントが記載されている"
    
  - id: DOC-10
    name: "Breadcrumbs保守"
    target: "*.mdc"
    metric: "Breadcrumbs consistency across all documents"
    threshold: 100%
    severity: error
    description: "パンくずリスト全体の整合性を保証（DOC-01～DOC-04を包括）。すべてのドキュメントで適切なBreadcrumbsブロック、Layer定義、Upstream/Downstreamパス、循環参照の不在を確認"

  - id: DOC-11
    name: "ドキュメント棚卸し整備"
    target: "docs/**"
    metric: "Redundancy and freshness review coverage"
    threshold: 100%
    severity: warn
    description: "docs/配下と基幹ドキュメントを棚卸しし、冗長・重複・陳腐化コンテンツを特定して統合・削除・更新計画を提示する"
```

## 検証方法

### Gate-DOC-01
```js
// 全 .mdc ファイルをスキャン
// > Breadcrumbs の開始行が存在するか確認
```

### Gate-DOC-02
```js
// Breadcrumbs.Layer を抽出
// 定義済みリストに含まれるか確認
const validLayers = ['STRATEGY','PRD','UX','API','DATA','ARCH','DEVELOPMENT','QA'];
```

### Gate-DOC-03
```js
// Upstream/Downstream パスを抽出（カンマ区切り）
// N/A または 実在ファイルパスか確認
```

### Gate-DOC-04
```js
// 全ドキュメントの Upstream/Downstream を解析
// グラフ構造で循環参照を検出（DFS）
```

### Gate-DOC-05
```js
// 全見出しを抽出（/^#{1,6}\s+/）
// 章番号パターン検出（/^#{1,6}\s+\d+\./）
// 章番号連続性チェック（1, 2, 3...）
// 欠番検出（番号の飛び）
```

### Gate-DOC-06
```js
// 目次ブロック検出（/^##\s+目次/）
// 目次リンク抽出（/\[(.+?)\]\(#(.+?)\)/）
// リンク先アンカーの存在確認
// リンク有効性検証
```

### Gate-DOC-07
```js
// ファイル名パターンチェック
// 層別命名規則:
//   PRD層: PRD_\w+\.mdc
//   ARCH層: \w+\.mdc または \w+\.md
//   QA層: \w+\.mdc
// 除外: index.mdc
// 基本的なファイル名規則: /[A-Z][a-zA-Z0-9_-]+\.mdc$/
```

### Gate-DOC-08
```js
// 内容ブロック検出（/^##\s+(扱う内容|扱わない内容|Scope)/）
// 内容記述チェック: 空でない内容が記載されているか確認
// 構造チェック: 箇条書き（/^[\s]*[-*]\s/）での記述確認
```

### Gate-DOC-09
```js
// はじめにブロック検出（/^##\s+(0\.\s*)?はじめに/）
// 必須要素チェック:
//   - 位置づけと目的の記載
//   - 想定読者と前提知識の記載
//   - 参照ドキュメントや更新方針の記載
// 構造チェック: 箇条書き（/^[\s]*[-*]\s/）での記述確認
```

### Gate-DOC-10
```js
// DOC-01～DOC-04を統合的に実行
// 1. 全ドキュメントをスキャン
// 2. Breadcrumbsブロック存在チェック（DOC-01）
// 3. Layer定義チェック（DOC-02）
// 4. Upstream/Downstreamパス存在チェック（DOC-03）
// 5. 循環参照検出（DOC-04）
// 6. 包括的なレポート生成
// 注: 通常はPrompt PRM-DOC-10-CHK-001で実行
```

## QG-Script-Prompt対応表

各Quality Gateに対応するScriptとPromptの一覧です。

| QG ID | QG名称 | Script ID | Script処理 | Prompt ID | Prompt処理 |
|-------|--------|-----------|-----------|-----------|-----------|
| DOC-01 | Breadcrumbsブロック必須 | SCR-DOC-01-VAL-01 | 存在チェック | PRM-DOC-01-FIX-01 | Breadcrumbs追加 |
| DOC-02 | Layer定義準拠 | SCR-DOC-02-VAL-01 | Layer値チェック | PRM-DOC-02-FIX-01 | Layer修正 |
| DOC-03 | リンクパス存在確認 | SCR-DOC-03-VAL-01 | パス存在チェック | PRM-DOC-03-FIX-01 | リンクパス修正 |
| DOC-04 | 循環参照検出 | SCR-DOC-04-VAL-01 | 循環参照検出 | PRM-DOC-04-FIX-01 | 循環参照解消 |
| DOC-05 | 章番号必須 | SCR-DOC-05-VAL-01 | 章番号検証 | PRM-DOC-05-FIX-01 | 章番号追加・修正 |
| DOC-06 | 目次必須 | SCR-DOC-06-VAL-01 | 目次検証 | PRM-DOC-06-FIX-01 | 目次生成 |
| DOC-07 | 命名規則必須 | SCR-DOC-07-VAL-01 | 命名規則検証 | PRM-DOC-07-FIX-01 | 命名規則修正 |
| DOC-08 | 内容範囲の明示必須 | SCR-DOC-08-VAL-01 | スコープ検証 | PRM-DOC-08-FIX-01 | スコープ追加 |
| DOC-09 | はじめに必須 | - | （未実装） | PRM-DOC-09-FIX-01 | はじめにセクション追加 |
| DOC-10 | Breadcrumbs保守 | - | （Prompt実行） | PRM-DOC-10-CHK-001 | 一括診断 |
| | | | | PRM-DOC-10-FIX-001 | Breadcrumbs追加 |
| | | | | PRM-DOC-10-FIX-002 | Layer修正 |
| | | | | PRM-DOC-10-FIX-003 | パス修正 |
| | | | | PRM-DOC-10-FIX-004 | 循環参照解消 |
| DOC-11 | ドキュメント棚卸し整備 | - | （Prompt実行） | PRM-DOC-11-CHK-001 | 棚卸し・統合計画策定 |

### ScriptとPromptの役割分担

**Script（確定的処理）**:
- 形式的な検証（存在チェック、形式チェック）
- 高速実行（ミリ秒オーダー）
- アウトプットが一意
- CI/CDパイプラインでの自動実行に適している

**Prompt（柔軟な処理）**:
- 文脈を考慮した修正提案
- 複雑な構造の生成
- 人間的な判断を伴う処理
- 対話的な修正に適している

### 実装場所

- **Script実装**: `scripts/validate-docs-gates.js`
- **Prompt実装**: `prompts.json` (VALIDATION_FIXカテゴリ)
- **詳細**: `docs/GATES/スクリプトレジストリ.mdc`参照

alwaysApply: true
---
