---
title: "システム概要"
layer: "ARCH"
template: "legacy-import"
upstream:
  - "docs/ARCH/index.mdc"
downstream:
  - "docs/ARCH/システム構成.mdc"
tags: []
---

# システム概要

> Breadcrumbs
> Layer: ARCH
> Upstream: docs/ARCH/index.mdc
> Downstream: docs/ARCH/システム構成.mdc

## 1. アーキテクチャ全体像

Nexus は Next.js をベースにした Web アプリケーションであり、ドキュメントのトレーサビリティとタスク管理を支援するために以下の 3 層で構成されています。

1. **App Router 層** – `src/app/(routes)` に定義されたページ／レイアウト。サーバーコンポーネントを用いて初期データを取得し、ブラウザへストリーミングします。
2. **クライアントコンポーネント層** – `src/components/**` に実装された Docs Navigator、Tasks Workspace、Settings Panel などの UI。ユーザー操作と状態管理を担います。
3. **サービス層** – `src/lib/` や `src/config/` に配置されたドメインサービス。Markdown ドキュメントやタスク JSON を読み込み、Zod スキーマで検証します。

## 2. コンテキストマップとの連携

アプリは `public/context.mdc` を読み込み、Breadcrumbs 情報からドキュメント間の関係を構築します。サーバーコンポーネントまたは Route Handler がファイルシステム経由でデータを取得し、クライアントコンポーネントがカテゴリ表示や DAG 可視化を行うことで PRD・ARCH・QA など複数レイヤーを横断したトレースを提供します。

## 3. セキュリティと拡張性の前提

- **セキュリティ**: ファイルアクセスやプロジェクトルート設定は `src/lib/` に集約し、許可されたパスのみ読み込むようガードします。ブラウザへは整形済みの JSON を返し、機微情報は送出しません。
- **拡張性**: Docs Navigator のカテゴリは Context Map に依存するため、新しいドキュメントを追加するだけで UI に反映されます。Tasks 機能も JSON スキーマを基準に拡張でき、AI 連携や品質ゲートの統合も `src/lib/` のサービス追加で対応します。

これらの前提のもとで、詳細な構成やセキュリティ制御は `docs/ARCH/システム構成.mdc` および関連ドキュメントに委譲されます。
