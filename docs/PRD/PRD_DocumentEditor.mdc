---
title: "PRD: ドキュメント編集・閲覧機能"
layer: "PRD"
upstream:
  - "docs/PRD/index.mdc"
downstream:
  - "docs/DEVELOPMENT/ドキュメント編集機能設計.mdc"
tags:
  - "document-editor"
  - "document-viewer"
  - "ai-prompt"
---

# PRD: ドキュメント編集・閲覧機能

> Breadcrumbs
> Layer: PRD
> Upstream: docs/PRD/index.mdc
> Downstream: docs/DEVELOPMENT/ドキュメント編集機能設計.mdc

## Purpose

- ドキュメントをアプリ内で閲覧・編集できるようにする
- AI支援によるドキュメント修正プロンプトを生成し、効率的な更新を実現
- Cursorへのコピペで即座に修正作業に着手できるワークフロー

## Features Registry

### FEAT-0021: ドキュメントビューア
- 機能: ドキュメントをアプリ内のモーダル/パネルで表示
- 優先度: High
- ステータス: 未実装

### FEAT-0022: ドキュメント編集機能
- 機能: ドキュメントの内容を編集して保存
- 優先度: High
- ステータス: 未実装

### FEAT-0023: 修正プロンプト生成
- 機能: 選択したドキュメントに対する修正プロンプトを生成・コピー
- 優先度: High
- ステータス: 未実装

## Scope

### 含まれる機能
- FEAT-0021: ドキュメントビューア
- FEAT-0022: ドキュメント編集機能
- FEAT-0023: 修正プロンプト生成

### 含まれない機能（Phase 2以降）
- リアルタイムプレビュー
- マルチユーザー編集（競合解決）
- バージョン管理統合
- Markdownエディタの高度な機能（テーブル編集、画像挿入等）

## 用語定義

- **ドキュメントビューア**: ドキュメントをアプリ内で表示するUI
- **モーダル**: 画面全体をオーバーレイする表示形式
- **プロンプト生成**: AIへの指示文を自動生成する機能
- **フロントマター**: YAMLヘッダー（title, layer, upstream等）
- **本文**: Markdownコンテンツ

---

## 機能仕様

### FEAT-0021: ドキュメントビューア

#### 概要
選択したドキュメントをアプリ内のモーダルで表示する。プレーンテキスト形式で表示し、編集モードへの切り替えを可能にする。

#### 要件

1. **表示形式**
   - プレーンテキスト表示（Markdownソースをそのまま表示）
   - フォント: 等幅フォント（Courier New, monospace）
   - 行番号表示（オプション）
   - シンタックスハイライトなし（Phase 1ではシンプルに）

2. **モーダルUI**
   - 画面中央に表示、背景をオーバーレイ
   - ヘッダー: ドキュメント名、閉じるボタン
   - コンテンツエリア: テキスト表示/編集エリア
   - フッター: アクションボタン（編集、プロンプト生成、閉じる）
   - ESCキーで閉じる
   - 外側クリックで閉じる

3. **表示モード切り替え**
   - 閲覧モード: 読み取り専用、スクロール可能
   - 編集モード: テキストエリアで編集可能

#### UI設計

```
┌──────────────────────────────────────────────────┐
│ docs/PRD/要求仕様書.mdc                    [×]    │
├──────────────────────────────────────────────────┤
│                                                  │
│  [プレーンテキスト表示エリア]                      │
│  ---                                             │
│  title: "PRD: Nexus - 要求定義書"                 │
│  layer: "PRD"                                    │
│  ---                                             │
│                                                  │
│  # PRD: Nexus - 要求定義書                       │
│  ...                                             │
│                                                  │
├──────────────────────────────────────────────────┤
│  [編集] [プロンプト生成] [閉じる]                  │
└──────────────────────────────────────────────────┘
```

#### 成果物
- DocumentViewerModal コンポーネント
- モーダル開閉の状態管理
- ドキュメント取得API連携

---

### FEAT-0022: ドキュメント編集機能

#### 概要
ドキュメントの内容をテキストエリアで編集し、ファイルシステムに保存する。編集前後の差分を表示し、確認してから保存できるようにする。

#### 要件

1. **編集モード**
   - テキストエリアでMarkdownソースを編集
   - リアルタイム文字数カウント表示
   - 編集中フラグ（保存せずに閉じる際の警告）
   - Ctrl+S で保存

2. **保存機能**
   - APIルート経由でファイルを保存（POST /api/docs）
   - 保存前に確認ダイアログ表示
   - 保存成功/失敗のフィードバック
   - 保存後は閲覧モードに戻る

3. **差分表示（オプション）**
   - 編集前後の差分をハイライト表示
   - 「変更をプレビュー」ボタン

4. **バリデーション**
   - YAMLフロントマターの構文チェック
   - 必須フィールド（title, layer）の存在確認
   - Breadcrumbs整合性チェック

#### UI設計

**編集モード:**
```
┌──────────────────────────────────────────────────┐
│ docs/PRD/要求仕様書.mdc [編集中]           [×]    │
├──────────────────────────────────────────────────┤
│  ┌────────────────────────────────────────────┐  │
│  │ [テキストエリア（編集可能）]                │  │
│  │ ---                                        │  │
│  │ title: "PRD: Nexus - 要求定義書"            │  │
│  │ ...                                        │  │
│  └────────────────────────────────────────────┘  │
│  文字数: 1,234                                    │
├──────────────────────────────────────────────────┤
│  [保存] [キャンセル] [プロンプト生成]              │
└──────────────────────────────────────────────────┘
```

#### 成果物
- 編集モード切り替え機能
- ファイル保存API（POST /api/docs）
- バリデーション機能
- 差分表示UI（オプション）

---

### FEAT-0023: 修正プロンプト生成

#### 概要
選択したドキュメントに対する修正指示プロンプトを自動生成し、クリップボードにコピーする。Cursorに貼り付けて即座に修正作業を開始できる。

#### 要件

1. **プロンプトテンプレート**
   - ドキュメント情報の挿入（パス、タイトル、レイヤー）
   - 現在の内容の要約
   - 修正指示のプレースホルダー
   - Breadcrumbs整合性の保持指示
   - Quality Gatesの遵守指示

2. **プロンプト生成ロジック**
   - ドキュメントメタデータを取得
   - テンプレートに値を埋め込み
   - クリップボードにコピー

3. **プロンプトの構成**
```markdown
以下のドキュメントを修正してください。

**ドキュメント情報:**
- パス: docs/PRD/要求仕様書.mdc
- タイトル: PRD: Nexus - 要求定義書
- レイヤー: PRD
- Upstream: docs/PRD/index.mdc
- Downstream: docs/ARCH/index.mdc, docs/DEVELOPMENT/index.mdc, docs/QA/index.mdc

**修正内容:**
[ここに修正指示を記入]

**注意事項:**
- YAMLフロントマターのupstream/downstreamを適切に更新してください
- Breadcrumbsセクションも同様に更新してください
- Quality Gates（DOC-01〜DOC-08）を遵守してください
```

4. **UI統合**
   - 「プロンプト生成」ボタンをモーダルフッターに配置
   - クリック時にクリップボードにコピー
   - 成功メッセージ表示（「プロンプトをコピーしました」）
   - プロンプト内容を確認できるプレビュー機能（オプション）

5. **カスタマイズ機能（Phase 2）**
   - プロンプトテンプレートの編集
   - よく使う修正パターンの保存
   - 複数ドキュメントの一括プロンプト生成

#### プロンプトテンプレート例

**基本テンプレート:**
```typescript
const generatePrompt = (doc: DocumentMetadata) => `
以下のドキュメントを修正してください。

**ドキュメント情報:**
- パス: ${doc.path}
- タイトル: ${doc.title}
- レイヤー: ${doc.layer}
- Upstream: ${doc.upstream.join(', ') || '(なし)'}
- Downstream: ${doc.downstream.join(', ') || '(なし)'}

**修正内容:**
[ここに具体的な修正指示を記入してください]

**注意事項:**
- YAMLフロントマターとBreadcrumbsを整合させてください
- Quality Gates（DOC-01〜DOC-08）を遵守してください
- レイヤー定義に従ってください
`;
```

#### 成果物
- プロンプト生成関数
- テンプレート管理機能
- クリップボードコピー機能
- プレビューモーダル（オプション）

---

## UI設計

### モーダルレイアウト

**サイズ:**
- 幅: 90vw（最大1200px）
- 高さ: 85vh
- 中央配置

**構成要素:**
1. **ヘッダー** (高さ: 60px)
   - ドキュメントパス表示
   - モード表示（閲覧/編集）
   - 閉じるボタン（×）

2. **コンテンツエリア** (flex: 1, overflow-y: auto)
   - 閲覧モード: pre要素で表示
   - 編集モード: textarea要素

3. **フッター** (高さ: 60px)
   - 左側: ステータス表示（文字数、保存状態）
   - 右側: アクションボタン

### モード別ボタン配置

**閲覧モード:**
- [編集] [プロンプト生成] [閉じる]

**編集モード:**
- [保存] [キャンセル] [プロンプト生成]

## データフロー

### 1. ドキュメント表示フロー
```
ユーザーが「ドキュメントを開く」クリック
  ↓
モーダル表示
  ↓
GET /api/docs?path={path} でドキュメント取得
  ↓
プレーンテキストを表示
```

### 2. ドキュメント編集フロー
```
「編集」ボタンクリック
  ↓
編集モードに切り替え（textareaに内容をセット）
  ↓
ユーザーが編集
  ↓
「保存」ボタンクリック
  ↓
バリデーション実行
  ↓
POST /api/docs?path={path} で保存
  ↓
成功メッセージ表示、閲覧モードに戻る
```

### 3. プロンプト生成フロー
```
「プロンプト生成」ボタンクリック
  ↓
ドキュメントメタデータを取得（既に保持している）
  ↓
テンプレートに値を埋め込み
  ↓
クリップボードにコピー
  ↓
「コピーしました」メッセージ表示
```

## 技術仕様

### APIエンドポイント

#### GET /api/docs
- 既存のエンドポイント
- ドキュメント内容を取得

#### POST /api/docs（新規）
```typescript
// Request
{
  path: string;
  content: string;
}

// Response (成功)
{
  success: true;
  message: "Document saved successfully"
}

// Response (失敗)
{
  success: false;
  error: string;
}
```

### コンポーネント設計

```typescript
interface DocumentViewerProps {
  path: string;
  isOpen: boolean;
  onClose: () => void;
}

interface EditState {
  isEditing: boolean;
  isDirty: boolean;
  originalContent: string;
  editedContent: string;
}

function DocumentViewer({ path, isOpen, onClose }: DocumentViewerProps) {
  const [content, setContent] = useState('');
  const [editState, setEditState] = useState<EditState>({
    isEditing: false,
    isDirty: false,
    originalContent: '',
    editedContent: '',
  });
  
  // ...
}
```

### State管理

```typescript
// DocsNavigator.tsx に追加
const [viewerState, setViewerState] = useState<{
  isOpen: boolean;
  path: string | null;
}>({
  isOpen: false,
  path: null,
});

const openDocument = (path: string) => {
  setViewerState({ isOpen: true, path });
};

const closeDocument = () => {
  setViewerState({ isOpen: false, path: null });
};
```

## CSS仕様

### モーダルスタイル

```css
.document-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.document-modal {
  background: white;
  border-radius: 12px;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  width: 90vw;
  max-width: 1200px;
  height: 85vh;
  display: flex;
  flex-direction: column;
}

.document-modal__header {
  padding: 16px 24px;
  border-bottom: 1px solid #e5e7eb;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.document-modal__content {
  flex: 1;
  overflow-y: auto;
  padding: 24px;
}

.document-modal__content pre {
  font-family: 'Courier New', monospace;
  font-size: 13px;
  line-height: 1.6;
  white-space: pre-wrap;
  word-wrap: break-word;
}

.document-modal__content textarea {
  width: 100%;
  height: 100%;
  font-family: 'Courier New', monospace;
  font-size: 13px;
  line-height: 1.6;
  border: 1px solid #d1d5db;
  border-radius: 8px;
  padding: 16px;
  resize: none;
}

.document-modal__footer {
  padding: 16px 24px;
  border-top: 1px solid #e5e7eb;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

/* ダークモード */
body.dark .document-modal {
  background: #1f2937;
}

body.dark .document-modal__header,
body.dark .document-modal__footer {
  border-color: #374151;
}

body.dark .document-modal__content textarea {
  background: #2d2d2d;
  color: #e0e0e0;
  border-color: #4d4d4d;
}
```

## Phase別実装計画

### Phase 1（MVP） - 基本機能

| FEAT-ID | 機能名 | タスク | ステータス |
|---------|--------|--------|-----------|
| FEAT-0021 | ドキュメントビューア | モーダルUI実装 | 未実装 |
| FEAT-0021 | ドキュメントビューア | ドキュメント表示 | 未実装 |
| FEAT-0022 | ドキュメント編集 | 編集モード切り替え | 未実装 |
| FEAT-0022 | ドキュメント編集 | 保存API実装 | 未実装 |
| FEAT-0022 | ドキュメント編集 | バリデーション | 未実装 |
| FEAT-0023 | プロンプト生成 | テンプレート定義 | 未実装 |
| FEAT-0023 | プロンプト生成 | クリップボードコピー | 未実装 |

**実装順序:**
1. FEAT-0021: ドキュメントビューア（閲覧のみ）
2. FEAT-0022: ドキュメント編集機能（保存まで）
3. FEAT-0023: プロンプト生成（基本テンプレート）

### Phase 2（拡張） - UX向上

| FEAT-ID | 機能名 | タスク | ステータス |
|---------|--------|--------|-----------|
| FEAT-0021 | ビューア拡張 | シンタックスハイライト | 計画中 |
| FEAT-0021 | ビューア拡張 | 行番号表示 | 計画中 |
| FEAT-0022 | 編集拡張 | 差分表示 | 計画中 |
| FEAT-0022 | 編集拡張 | リアルタイムプレビュー | 計画中 |
| FEAT-0023 | プロンプト拡張 | カスタムテンプレート | 計画中 |
| FEAT-0023 | プロンプト拡張 | プレビューモーダル | 計画中 |

### Phase 3（将来） - 高度な機能

- バージョン履歴管理
- 複数ドキュメント同時編集
- Markdownエディタの高度な機能
- AIによる自動修正提案

## セキュリティ要件

1. **パストラバーサル攻撃の防止**
   - パスに `..` や `/` で始まるパスを拒否
   - ホワイトリスト形式のパス検証

2. **ファイル上書き防止**
   - 保存前に確認ダイアログ
   - バックアップ作成（オプション）

3. **XSS対策**
   - ユーザー入力のエスケープ
   - プレーンテキスト表示（HTML解釈なし）

## テスト要件

### FEAT-0021: ドキュメントビューア

**単体テスト:**
- [ ] モーダルの開閉
- [ ] ドキュメント取得
- [ ] ESCキーで閉じる
- [ ] 外側クリックで閉じる

**E2Eテスト:**
- [ ] 「ドキュメントを開く」ボタンからモーダル表示
- [ ] ドキュメント内容の表示
- [ ] モーダルの閉じる動作

### FEAT-0022: ドキュメント編集

**単体テスト:**
- [ ] 編集モード切り替え
- [ ] 保存API呼び出し
- [ ] バリデーション（YAMLフロントマター）
- [ ] 編集中の警告表示

**E2Eテスト:**
- [ ] ドキュメント編集
- [ ] 保存成功
- [ ] 保存失敗時のエラー表示
- [ ] キャンセル時の確認

### FEAT-0023: プロンプト生成

**単体テスト:**
- [ ] プロンプト生成ロジック
- [ ] テンプレート埋め込み
- [ ] クリップボードコピー

**E2Eテスト:**
- [ ] 「プロンプト生成」ボタンクリック
- [ ] クリップボードにコピー成功
- [ ] 成功メッセージ表示

## 制約事項

1. **ブラウザ環境での制約**
   - ファイルシステムへの直接アクセス不可
   - Next.js API Routes経由で保存

2. **同時編集の制約**
   - Phase 1では単一ユーザー編集のみ
   - 競合解決機能なし

3. **ファイルサイズ制限**
   - 1ドキュメントあたり最大1MB程度を想定
   - それ以上は警告表示

## 参考

- Electronアプリ実装: `tools/nexus/tools/nexus/src/renderer/features/docs-navigator/docs-navigator.js`
- 詳細カード共通コンポーネント: FEAT-0009
- ドキュメントテンプレート: `docs/PRD/PRD_DocumentTemplate.mdc`
- Quality Gates: `docs/GATES/document.mdc`
