# Nexus E2Eテスト実行方法

> Breadcrumbs
> Layer: QA
> Upstream: tools/nexus/docs/QA/index.mdc
> Downstream: N/A

## 目的
NexusのE2Eテスト（Tree表示＋DAG Quality Gate Check）の実行方法を定義。

## 実装状況

### ✅ 完了項目
- TypeScript化（main.ts）
- E2Eテストスクリプト（`tools/nexus/legacy/tests/test-e2e-v2.js`）
- PlaywrightによるCDP接続
- スクリーンショット取得
- `TEST_RESULT`検証
- Treeボタン自動クリック
- `window.renderTree()`直接呼び出し

### ⚠️ 現状の課題
**Treeボタンのクリックは成功しているがツリーが表示されない原因**:
1. `window.entries` が空（コンテキストファイルが読み込まれていない）
2. コンテキスト切替後にページリロードが必要
3. E2Eテストのタイミングでコンテキスト読み込みが完了していない

**ログから分かること**:
```
[Mode Switch] Tree mode activated  ← クリック成功
parseAllBreadcrumbs: entries count = 0  ← entriesが空
No root nodes found  ← ツリー表示なし
```

## 解決策

### 推奨アプローチ: 手動テスト
**現状、E2E自動テストより手動テストが確実**:
1. Electronアプリを手動起動（`npm start`）
2. Treeボタンをクリック
3. DevToolsで `TEST_RESULT` を確認

### E2E自動テストの実装（将来の改善）
- コンテキスト切り替え後のページリロード待機を実装
- `window.entries` が設定されるまで待機
- コンテキストファイル読み込み完了を明示的に検証

## テスト対象
- Treeモードのツリー表示機能
- DAG Quality Gate Check（DOC-01〜04）
- ノード警告アイコン表示
- Quality Gates結果パネル

## 実行方法

### 手動テスト（推奨）

#### 1. 起動
```bash
cd tools/nexus

# デバッグモード（Context切替表示）
NEXUS_DEBUG=1 npm start

# または通常モード
npm start
```

#### 2. Context選択（デバッグモードのみ）
右上の「Context:」セレクトで：
- **Nexus**: `tools/nexus/docs/**` を表示
- **Repo**: `.cursor/context.mdc` を表示

#### 3. Treeモード表示
1. Docsタブを開く
2. 「Tree」ボタンをクリック
3. 「Downstream (上位→下位)」または「Upstream (下位→上位)」を選択
4. 「Validate Gates」ボタンで手動再検証

#### 4. 確認項目

**ツリー表示**:
- ツリーノードが表示される
- ステータス表示（右上）に「✓ 2 roots」など表示
- ノードクリックで展開/折りたたみ
- ノードに警告/エラーアイコン表示（違反あり）

**Quality Gates結果**:
- 右下パネルに「Quality Gates」セクション表示
- 各ゲート（DOC-01〜04）の状態表示
  - ✓ PASS（緑）: 違反なし
  - ✗ N violation(s)（赤）: エラー違反
  - ✗ N violation(s)（黄）: 警告違反（DOC-04のみ）
- 違反の詳細表示
  - 「Open」ボタン: ドキュメントを開く
  - 「Fix Prompt」ボタン: 修正プロンプト生成＋コピー

**DevTools確認**（F12）:
- Consoleタブに以下が表示される
```
[Mode Switch] Tree mode activated
parseAllBreadcrumbs: entries count = 9
[renderTree] nodes = 9
[renderTree] rootNodes = 1
TEST_RESULT: { "nodesCount": 9, "rootNodesCount": 1, ... }
renderTree: success, rendered 1 root nodes
```

## テスト結果の判定

### 成功条件
- `TEST_RESULT` がコンソールに出力される
- `nodesCount > 0`
- `rootNodesCount > 0`
- スクリーンショット（`test-screenshot.png`）が生成される
- ノードがツリー形式で表示される

### 失敗パターン

#### 「No root nodes found」（手動テスト時）
- 原因: 全ドキュメントにBreadcrumbsブロックが存在しない、または全てがUpstream/Downstreamリンクを持っている
- 対処: `tools/nexus/docs/**` のBreadcrumbsブロックを確認

#### 「TEST_RESULT not found」（手動テスト時）
- 原因: Treeボタンがクリックされていない、またはJavaScriptエラー
- 対処: DevTools（F12）のConsoleでエラー確認

## トラブルシューティング

### ツリーが表示されない
1. DevTools（F12）でエラー確認
2. `tools/nexus/docs/**` のBreadcrumbsブロックが正しいか確認
3. コンテキスト選択（Nexus/Repo）を切り替えて試す
4. `window.entries` が設定されているか確認

### ゲート結果が表示されない
1. Validateボタンをクリック
2. `renderGateResults()` が実行されているか確認（DevTools Console）

## 実装完了状況

### ✅ 完了項目
- TypeScript化（main.ts）
- E2Eテストスクリプト（`tools/nexus/legacy/tests/test-e2e-v2.js`）
- PlaywrightによるCDP接続実装
- Treeボタン自動クリック機能
- `window.renderTree()` グローバル公開
- `window.treeView`, `window.treeDirection` グローバル公開
- スクリーンショット自動取得
- `TEST_RESULT` JSON検証
- `tools/nexus/context.mdc` 作成（10エントリ）
- 初期化完了フラグ (`window.docsNavigatorReady`)

### ✅ E2Eテスト実行可能
以下のコマンドで実行可能:
```bash
cd tools/nexus
npm run build
node legacy/tests/test-e2e-v2.js
```

**動作内容**:
1. Electron起動（NEXUS_DEBUG=1）
2. CDP接続
3. 初期化待機（`window.docsNavigatorReady`）
4. Treeボタンクリック
5. `renderTree()` 実行
6. `TEST_RESULT` 検出
7. スクリーンショット取得

**成功判定**: `TEST_RESULT` JSONが出力されれば成功

### ⚠️ 既知の制限事項
- **コンテキスト読み込みタイミング**: E2Eテスト実行時に `window.entries` が空の場合がある
- **ツリー表示**: `entries`が空の場合、「No root nodes found」と表示される
- **手動テストとの差異**: 手動起動では正常にツリーが表示される

### ✅ 推奨テスト方法

**自動E2Eテスト（基本動作確認）**:
```bash
node legacy/tests/test-e2e-v2.js
```
- `TEST_RESULT` 検出で成功
- `renderTree()` 実行確認
- スクリーンショット生成確認

**手動テスト（完全機能確認）**:
```bash
npm start
```
- ツリー表示確認
- ノード展開/折りたたみ確認
- Quality Gates検証確認

## 参考
- QA/index.mdc: テストシナリオ全般
- GATES/document.mdc: Quality Gates定義
- PRD/PRD_Nexus.mdc: Nexus要件仕様
- DEVELOPMENT/index.mdc: 実装ガイド

alwaysApply: true
---
